{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _warnOnce = _interopRequireDefault(require(\"warn-once\"));\nvar _DrawerView = _interopRequireDefault(require(\"../views/DrawerView\"));\nvar _excluded = [\"id\", \"initialRouteName\", \"defaultStatus\", \"backBehavior\", \"children\", \"screenListeners\", \"screenOptions\"],\n  _excluded2 = [\"openByDefault\", \"lazy\", \"drawerContentOptions\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction DrawerNavigator(_ref) {\n  var id = _ref.id,\n    initialRouteName = _ref.initialRouteName,\n    customDefaultStatus = _ref.defaultStatus,\n    backBehavior = _ref.backBehavior,\n    children = _ref.children,\n    screenListeners = _ref.screenListeners,\n    screenOptions = _ref.screenOptions,\n    restWithDeprecated = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var openByDefault = restWithDeprecated.openByDefault,\n    lazy = restWithDeprecated.lazy,\n    drawerContentOptions = restWithDeprecated.drawerContentOptions,\n    rest = (0, _objectWithoutProperties2.default)(restWithDeprecated, _excluded2);\n  var defaultScreenOptions = {};\n  if (drawerContentOptions) {\n    Object.assign(defaultScreenOptions, {\n      drawerPosition: drawerContentOptions.drawerPosition,\n      drawerType: drawerContentOptions.drawerType,\n      swipeEdgeWidth: drawerContentOptions.edgeWidth,\n      drawerHideStatusBarOnOpen: drawerContentOptions.hideStatusBar,\n      keyboardDismissMode: drawerContentOptions.keyboardDismissMode,\n      swipeMinDistance: drawerContentOptions.minSwipeDistance,\n      overlayColor: drawerContentOptions.overlayColor,\n      drawerStatusBarAnimation: drawerContentOptions.statusBarAnimation,\n      gestureHandlerProps: drawerContentOptions.gestureHandlerProps\n    });\n    Object.keys(defaultScreenOptions).forEach(function (key) {\n      if (defaultScreenOptions[key] === undefined) {\n        delete defaultScreenOptions[key];\n      }\n    });\n    (0, _warnOnce.default)(drawerContentOptions, \"Drawer Navigator: 'drawerContentOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n\" + JSON.stringify(defaultScreenOptions, null, 2) + \"\\n\\nSee https://reactnavigation.org/docs/drawer-navigator#options for more details.\");\n  }\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n    (0, _warnOnce.default)(true, \"Drawer Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/drawer-navigator/#lazy for more details.\");\n  }\n  if (typeof openByDefault === 'boolean') {\n    (0, _warnOnce.default)(true, \"Drawer Navigator: 'openByDefault' is deprecated. Use 'defaultStatus' and set it to 'open' or 'closed' instead.\\n\\nSee https://reactnavigation.org/docs/drawer-navigator/#defaultstatus for more details.\");\n  }\n  var defaultStatus = customDefaultStatus !== undefined ? customDefaultStatus : openByDefault ? 'open' : 'closed';\n  var _useNavigationBuilder = (0, _native.useNavigationBuilder)(_native.DrawerRouter, {\n      id: id,\n      initialRouteName: initialRouteName,\n      defaultStatus: defaultStatus,\n      backBehavior: backBehavior,\n      children: children,\n      screenListeners: screenListeners,\n      screenOptions: screenOptions,\n      defaultScreenOptions: defaultScreenOptions\n    }),\n    state = _useNavigationBuilder.state,\n    descriptors = _useNavigationBuilder.descriptors,\n    navigation = _useNavigationBuilder.navigation,\n    NavigationContent = _useNavigationBuilder.NavigationContent;\n  return React.createElement(NavigationContent, null, React.createElement(_DrawerView.default, _extends({}, rest, {\n    defaultStatus: defaultStatus,\n    state: state,\n    descriptors: descriptors,\n    navigation: navigation\n  })));\n}\nvar _default = (0, _native.createNavigatorFactory)(DrawerNavigator);\nexports.default = _default;","map":{"version":3,"names":["_native","require","React","_interopRequireWildcard","_warnOnce","_interopRequireDefault","_DrawerView","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DrawerNavigator","_ref","id","initialRouteName","customDefaultStatus","defaultStatus","backBehavior","children","screenListeners","screenOptions","restWithDeprecated","_objectWithoutProperties2","openByDefault","lazy","drawerContentOptions","rest","defaultScreenOptions","assign","drawerPosition","drawerType","swipeEdgeWidth","edgeWidth","drawerHideStatusBarOnOpen","hideStatusBar","keyboardDismissMode","swipeMinDistance","minSwipeDistance","overlayColor","drawerStatusBarAnimation","statusBarAnimation","gestureHandlerProps","keys","forEach","undefined","warnOnce","JSON","stringify","_useNavigationBuilder","useNavigationBuilder","DrawerRouter","state","descriptors","navigation","NavigationContent","createElement","DrawerView","_extends","_default","createNavigatorFactory","exports"],"sources":["C:\\Users\\acer\\OneDrive\\Desktop\\cab-main\\node_modules\\@react-navigation\\drawer\\src\\navigators\\createDrawerNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  DrawerActionHelpers,\n  DrawerNavigationState,\n  DrawerRouter,\n  DrawerRouterOptions,\n  DrawerStatus,\n  ParamListBase,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  DrawerNavigationConfig,\n  DrawerNavigationEventMap,\n  DrawerNavigationOptions,\n} from '../types';\nimport DrawerView from '../views/DrawerView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  DrawerNavigationState<ParamListBase>,\n  DrawerNavigationOptions,\n  DrawerNavigationEventMap\n> &\n  DrawerRouterOptions &\n  DrawerNavigationConfig;\n\nfunction DrawerNavigator({\n  id,\n  initialRouteName,\n  defaultStatus: customDefaultStatus,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  ...restWithDeprecated\n}: Props) {\n  const {\n    // @ts-expect-error: openByDefault is deprecated\n    openByDefault,\n    // @ts-expect-error: lazy is deprecated\n    lazy,\n    // @ts-expect-error: drawerContentOptions is deprecated\n    drawerContentOptions,\n    ...rest\n  } = restWithDeprecated;\n\n  let defaultScreenOptions: DrawerNavigationOptions = {};\n\n  if (drawerContentOptions) {\n    Object.assign(defaultScreenOptions, {\n      drawerPosition: drawerContentOptions.drawerPosition,\n      drawerType: drawerContentOptions.drawerType,\n      swipeEdgeWidth: drawerContentOptions.edgeWidth,\n      drawerHideStatusBarOnOpen: drawerContentOptions.hideStatusBar,\n      keyboardDismissMode: drawerContentOptions.keyboardDismissMode,\n      swipeMinDistance: drawerContentOptions.minSwipeDistance,\n      overlayColor: drawerContentOptions.overlayColor,\n      drawerStatusBarAnimation: drawerContentOptions.statusBarAnimation,\n      gestureHandlerProps: drawerContentOptions.gestureHandlerProps,\n    });\n\n    (\n      Object.keys(defaultScreenOptions) as (keyof DrawerNavigationOptions)[]\n    ).forEach((key) => {\n      if (defaultScreenOptions[key] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete defaultScreenOptions[key];\n      }\n    });\n\n    warnOnce(\n      drawerContentOptions,\n      `Drawer Navigator: 'drawerContentOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(\n        defaultScreenOptions,\n        null,\n        2\n      )}\\n\\nSee https://reactnavigation.org/docs/drawer-navigator#options for more details.`\n    );\n  }\n\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n\n    warnOnce(\n      true,\n      `Drawer Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/drawer-navigator/#lazy for more details.`\n    );\n  }\n\n  if (typeof openByDefault === 'boolean') {\n    warnOnce(\n      true,\n      `Drawer Navigator: 'openByDefault' is deprecated. Use 'defaultStatus' and set it to 'open' or 'closed' instead.\\n\\nSee https://reactnavigation.org/docs/drawer-navigator/#defaultstatus for more details.`\n    );\n  }\n\n  const defaultStatus: DrawerStatus =\n    customDefaultStatus !== undefined\n      ? customDefaultStatus\n      : openByDefault\n      ? 'open'\n      : 'closed';\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      DrawerNavigationState<ParamListBase>,\n      DrawerRouterOptions,\n      DrawerActionHelpers<ParamListBase>,\n      DrawerNavigationOptions,\n      DrawerNavigationEventMap\n    >(DrawerRouter, {\n      id,\n      initialRouteName,\n      defaultStatus,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <DrawerView\n        {...rest}\n        defaultStatus={defaultStatus}\n        state={state}\n        descriptors={descriptors}\n        navigation={navigation}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  DrawerNavigationState<ParamListBase>,\n  DrawerNavigationOptions,\n  DrawerNavigationEventMap,\n  typeof DrawerNavigator\n>(DrawerNavigator);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}