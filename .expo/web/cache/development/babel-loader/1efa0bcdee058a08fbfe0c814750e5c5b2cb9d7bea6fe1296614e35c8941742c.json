{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = DrawerToggleButton;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Image = _interopRequireDefault(require(\"react-native-web/dist/exports/Image\"));\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _excluded = [\"tintColor\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction DrawerToggleButton(_ref) {\n  var tintColor = _ref.tintColor,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var navigation = (0, _native.useNavigation)();\n  return React.createElement(_elements.PlatformPressable, _extends({}, rest, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    android_ripple: {\n      borderless: true\n    },\n    onPress: function onPress() {\n      return navigation.dispatch(_native.DrawerActions.toggleDrawer());\n    },\n    style: styles.touchable,\n    hitSlop: _Platform.default.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }), React.createElement(_Image.default, {\n    style: [styles.icon, tintColor ? {\n      tintColor: tintColor\n    } : null],\n    source: require(\"./assets/toggle-drawer-icon.png\"),\n    fadeDuration: 0\n  }));\n}\nvar styles = _StyleSheet.default.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  }\n});","map":{"version":3,"names":["_elements","require","_native","React","_interopRequireWildcard","_Image","_interopRequireDefault","_Platform","_StyleSheet","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DrawerToggleButton","_ref","tintColor","rest","_objectWithoutProperties2","navigation","useNavigation","createElement","PlatformPressable","_extends","accessible","accessibilityRole","android_ripple","borderless","onPress","dispatch","DrawerActions","toggleDrawer","style","styles","touchable","hitSlop","Platform","select","ios","undefined","top","right","bottom","left","Image","icon","source","fadeDuration","StyleSheet","create","height","width","margin","resizeMode","marginHorizontal"],"sources":["C:\\Users\\acer\\OneDrive\\Desktop\\cab-main\\node_modules\\@react-navigation\\drawer\\src\\views\\DrawerToggleButton.tsx"],"sourcesContent":["import { PlatformPressable } from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  ParamListBase,\n  useNavigation,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet } from 'react-native';\n\nimport type { DrawerNavigationProp } from '../types';\n\ntype Props = {\n  accessibilityLabel?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  tintColor?: string;\n};\n\nexport default function DrawerToggleButton({ tintColor, ...rest }: Props) {\n  const navigation = useNavigation<DrawerNavigationProp<ParamListBase>>();\n\n  return (\n    <PlatformPressable\n      {...rest}\n      accessible\n      accessibilityRole=\"button\"\n      android_ripple={{ borderless: true }}\n      onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n      style={styles.touchable}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <Image\n        style={[styles.icon, tintColor ? { tintColor } : null]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}