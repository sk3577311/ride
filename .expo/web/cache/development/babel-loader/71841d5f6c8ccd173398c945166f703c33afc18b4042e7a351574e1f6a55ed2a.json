{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _PixelRatio = _interopRequireDefault(require(\"react-native-web/dist/exports/PixelRatio\"));\nfunction getScaledAssetPath(asset) {\n  var scale = AssetSourceResolver.pickScale(asset.scales, _PixelRatio.default.get());\n  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  var type = !asset.type ? '' : \".\" + asset.type;\n  return asset.httpServerLocation + '/' + asset.name + scaleSuffix + type;\n}\nvar AssetSourceResolver = function () {\n  function AssetSourceResolver(serverUrl, jsbundleUrl, asset) {\n    (0, _classCallCheck2.default)(this, AssetSourceResolver);\n    if (!serverUrl) {\n      throw new Error('Web assets require a server URL');\n    }\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = null;\n    this.asset = asset;\n  }\n  (0, _createClass2.default)(AssetSourceResolver, [{\n    key: \"isLoadedFromServer\",\n    value: function isLoadedFromServer() {\n      return true;\n    }\n  }, {\n    key: \"isLoadedFromFileSystem\",\n    value: function isLoadedFromFileSystem() {\n      return false;\n    }\n  }, {\n    key: \"defaultAsset\",\n    value: function defaultAsset() {\n      return this.assetServerURL();\n    }\n  }, {\n    key: \"assetServerURL\",\n    value: function assetServerURL() {\n      var fromUrl = new URL(getScaledAssetPath(this.asset), this.serverUrl);\n      fromUrl.searchParams.set('platform', _expoModulesCore.Platform.OS);\n      fromUrl.searchParams.set('hash', this.asset.hash);\n      return this.fromSource(fromUrl.toString());\n    }\n  }, {\n    key: \"fromSource\",\n    value: function fromSource(source) {\n      var _this$asset$width, _this$asset$height;\n      return {\n        __packager_asset: true,\n        width: (_this$asset$width = this.asset.width) != null ? _this$asset$width : undefined,\n        height: (_this$asset$height = this.asset.height) != null ? _this$asset$height : undefined,\n        uri: source,\n        scale: AssetSourceResolver.pickScale(this.asset.scales, _PixelRatio.default.get())\n      };\n    }\n  }], [{\n    key: \"pickScale\",\n    value: function pickScale(scales, deviceScale) {\n      for (var i = 0; i < scales.length; i++) {\n        if (scales[i] >= deviceScale) {\n          return scales[i];\n        }\n      }\n      return scales[scales.length - 1] || 1;\n    }\n  }]);\n  return AssetSourceResolver;\n}();\nexports.default = AssetSourceResolver;","map":{"version":3,"names":["_expoModulesCore","require","_PixelRatio","_interopRequireDefault","getScaledAssetPath","asset","scale","AssetSourceResolver","pickScale","scales","PixelRatio","get","scaleSuffix","type","httpServerLocation","name","serverUrl","jsbundleUrl","_classCallCheck2","default","Error","_createClass2","key","value","isLoadedFromServer","isLoadedFromFileSystem","defaultAsset","assetServerURL","fromUrl","URL","searchParams","set","Platform","OS","hash","fromSource","toString","source","_this$asset$width","_this$asset$height","__packager_asset","width","undefined","height","uri","deviceScale","i","length","exports"],"sources":["C:\\Users\\acer\\OneDrive\\Desktop\\cab-main\\node_modules\\expo-asset\\src\\AssetSourceResolver.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport { PixelRatio } from 'react-native';\nimport { PackagerAsset } from 'react-native/Libraries/Image/AssetRegistry';\n\nexport type ResolvedAssetSource = {\n  __packager_asset: boolean;\n  width?: number;\n  height?: number;\n  uri: string;\n  scale: number;\n};\n\n// Returns the Metro dev server-specific asset location.\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, PixelRatio.get());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const type = !asset.type ? '' : `.${asset.type}`;\n  return asset.httpServerLocation + '/' + asset.name + scaleSuffix + type;\n}\n\nexport default class AssetSourceResolver {\n  serverUrl: string;\n  // where the jsbundle is being run from\n  // NOTE(EvanBacon): Never defined on web.\n  jsbundleUrl?: string | null;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(\n    serverUrl: string | undefined | null,\n    jsbundleUrl: string | undefined | null,\n    asset: PackagerAsset\n  ) {\n    if (!serverUrl) {\n      throw new Error('Web assets require a server URL');\n    }\n\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = null;\n    this.asset = asset;\n  }\n\n  // Always true for web runtimes\n  isLoadedFromServer(): boolean {\n    return true;\n  }\n\n  // Always false for web runtimes\n  isLoadedFromFileSystem(): boolean {\n    return false;\n  }\n\n  defaultAsset(): ResolvedAssetSource {\n    return this.assetServerURL();\n  }\n\n  /**\n   * @returns absolute remote URL for the hosted asset.\n   */\n  assetServerURL(): ResolvedAssetSource {\n    const fromUrl = new URL(getScaledAssetPath(this.asset), this.serverUrl);\n    fromUrl.searchParams.set('platform', Platform.OS);\n    fromUrl.searchParams.set('hash', this.asset.hash);\n    return this.fromSource(fromUrl.toString());\n  }\n\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width ?? undefined,\n      height: this.asset.height ?? undefined,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, PixelRatio.get()),\n    };\n  }\n\n  static pickScale(scales: number[], deviceScale: number): number {\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}