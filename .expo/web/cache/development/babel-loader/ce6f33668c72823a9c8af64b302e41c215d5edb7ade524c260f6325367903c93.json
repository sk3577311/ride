{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _interfaces = require(\"../interfaces\");\nvar _EventManager2 = _interopRequireDefault(require(\"./EventManager\"));\nvar _utils = require(\"../utils\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar PointerEventManager = function (_EventManager) {\n  (0, _inherits2.default)(PointerEventManager, _EventManager);\n  var _super = _createSuper(PointerEventManager);\n  function PointerEventManager() {\n    (0, _classCallCheck2.default)(this, PointerEventManager);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(PointerEventManager, [{\n    key: \"setListeners\",\n    value: function setListeners() {\n      var _this = this;\n      this.view.addEventListener('pointerdown', function (event) {\n        if (event.pointerType === _interfaces.PointerType.TOUCH) {\n          return;\n        }\n        if (!(0, _utils.isPointerInBounds)(_this.view, {\n          x: event.clientX,\n          y: event.clientY\n        })) {\n          return;\n        }\n        var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.DOWN);\n        var target = event.target;\n        target.setPointerCapture(adaptedEvent.pointerId);\n        _this.markAsInBounds(adaptedEvent.pointerId);\n        if (++_this.activePointersCounter > 1) {\n          adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_DOWN;\n          _this.onPointerAdd(adaptedEvent);\n        } else {\n          _this.onPointerDown(adaptedEvent);\n        }\n      });\n      this.view.addEventListener('pointerup', function (event) {\n        if (event.pointerType === _interfaces.PointerType.TOUCH) {\n          return;\n        }\n        if (_this.activePointersCounter === 0) {\n          return;\n        }\n        var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.UP);\n        var target = event.target;\n        target.releasePointerCapture(adaptedEvent.pointerId);\n        _this.markAsOutOfBounds(adaptedEvent.pointerId);\n        if (--_this.activePointersCounter > 0) {\n          adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_UP;\n          _this.onPointerRemove(adaptedEvent);\n        } else {\n          _this.onPointerUp(adaptedEvent);\n        }\n      });\n      this.view.addEventListener('pointermove', function (event) {\n        if (event.pointerType === _interfaces.PointerType.TOUCH) {\n          return;\n        }\n        if (event.pointerType === _interfaces.PointerType.MOUSE && event.buttons !== _interfaces.MouseButtons.LEFT) {\n          return;\n        }\n        var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.MOVE);\n        var inBounds = (0, _utils.isPointerInBounds)(_this.view, {\n          x: adaptedEvent.x,\n          y: adaptedEvent.y\n        });\n        var pointerIndex = _this.pointersInBounds.indexOf(adaptedEvent.pointerId);\n        if (inBounds) {\n          if (pointerIndex < 0) {\n            adaptedEvent.eventType = _interfaces.EventTypes.ENTER;\n            _this.onPointerEnter(adaptedEvent);\n            _this.markAsInBounds(adaptedEvent.pointerId);\n          } else {\n            _this.onPointerMove(adaptedEvent);\n          }\n        } else {\n          if (pointerIndex >= 0) {\n            adaptedEvent.eventType = _interfaces.EventTypes.OUT;\n            _this.onPointerOut(adaptedEvent);\n            _this.markAsOutOfBounds(adaptedEvent.pointerId);\n          } else {\n            _this.onPointerOutOfBounds(adaptedEvent);\n          }\n        }\n      });\n      this.view.addEventListener('pointercancel', function (event) {\n        if (event.pointerType === _interfaces.PointerType.TOUCH) {\n          return;\n        }\n        var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.CANCEL);\n        _this.onPointerCancel(adaptedEvent);\n        _this.markAsOutOfBounds(adaptedEvent.pointerId);\n        _this.activePointersCounter = 0;\n      });\n    }\n  }, {\n    key: \"mapEvent\",\n    value: function mapEvent(event, eventType) {\n      return {\n        x: event.clientX,\n        y: event.clientY,\n        offsetX: event.offsetX,\n        offsetY: event.offsetY,\n        pointerId: event.pointerId,\n        eventType: eventType,\n        pointerType: event.pointerType,\n        buttons: event.buttons,\n        time: event.timeStamp\n      };\n    }\n  }]);\n  return PointerEventManager;\n}(_EventManager2.default);\nexports.default = PointerEventManager;","map":{"version":3,"names":["_interfaces","require","_EventManager2","_interopRequireDefault","_utils","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","PointerEventManager","_EventManager","_inherits2","_super","_classCallCheck2","_createClass2","key","value","setListeners","_this","view","addEventListener","event","pointerType","PointerType","TOUCH","isPointerInBounds","x","clientX","y","clientY","adaptedEvent","mapEvent","EventTypes","DOWN","target","setPointerCapture","pointerId","markAsInBounds","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","UP","releasePointerCapture","markAsOutOfBounds","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","MOUSE","buttons","MouseButtons","LEFT","MOVE","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","OUT","onPointerOut","onPointerOutOfBounds","CANCEL","onPointerCancel","offsetX","offsetY","time","timeStamp","EventManager","exports"],"sources":["C:\\Users\\acer\\OneDrive\\Desktop\\cab-main\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\PointerEventManager.ts"],"sourcesContent":["import {\n  AdaptedEvent,\n  EventTypes,\n  MouseButtons,\n  PointerType,\n} from '../interfaces';\nimport EventManager from './EventManager';\nimport { isPointerInBounds } from '../utils';\n\nexport default class PointerEventManager extends EventManager {\n  public setListeners(): void {\n    this.view.addEventListener('pointerdown', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n      if (\n        !isPointerInBounds(this.view, { x: event.clientX, y: event.clientY })\n      ) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.DOWN);\n      const target = event.target as HTMLElement;\n\n      target.setPointerCapture(adaptedEvent.pointerId);\n      this.markAsInBounds(adaptedEvent.pointerId);\n\n      if (++this.activePointersCounter > 1) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n        this.onPointerAdd(adaptedEvent);\n      } else {\n        this.onPointerDown(adaptedEvent);\n      }\n    });\n\n    this.view.addEventListener('pointerup', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      // When we call reset on gesture handlers, it also resets their event managers\n      // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n      // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n      // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n      if (this.activePointersCounter === 0) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.UP);\n      const target = event.target as HTMLElement;\n\n      target.releasePointerCapture(adaptedEvent.pointerId);\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n\n      if (--this.activePointersCounter > 0) {\n        adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n        this.onPointerRemove(adaptedEvent);\n      } else {\n        this.onPointerUp(adaptedEvent);\n      }\n    });\n\n    this.view.addEventListener('pointermove', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      if (\n        event.pointerType === PointerType.MOUSE &&\n        event.buttons !== MouseButtons.LEFT\n      ) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.MOVE);\n\n      const inBounds: boolean = isPointerInBounds(this.view, {\n        x: adaptedEvent.x,\n        y: adaptedEvent.y,\n      });\n\n      const pointerIndex: number = this.pointersInBounds.indexOf(\n        adaptedEvent.pointerId\n      );\n\n      if (inBounds) {\n        if (pointerIndex < 0) {\n          adaptedEvent.eventType = EventTypes.ENTER;\n          this.onPointerEnter(adaptedEvent);\n          this.markAsInBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerMove(adaptedEvent);\n        }\n      } else {\n        if (pointerIndex >= 0) {\n          adaptedEvent.eventType = EventTypes.OUT;\n          this.onPointerOut(adaptedEvent);\n          this.markAsOutOfBounds(adaptedEvent.pointerId);\n        } else {\n          this.onPointerOutOfBounds(adaptedEvent);\n        }\n      }\n    });\n\n    this.view.addEventListener('pointercancel', (event: PointerEvent): void => {\n      if (event.pointerType === PointerType.TOUCH) {\n        return;\n      }\n\n      const adaptedEvent: AdaptedEvent = this.mapEvent(\n        event,\n        EventTypes.CANCEL\n      );\n\n      this.onPointerCancel(adaptedEvent);\n      this.markAsOutOfBounds(adaptedEvent.pointerId);\n      this.activePointersCounter = 0;\n    });\n  }\n\n  protected mapEvent(event: PointerEvent, eventType: EventTypes): AdaptedEvent {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n      offsetX: event.offsetX,\n      offsetY: event.offsetY,\n      pointerId: event.pointerId,\n      eventType: eventType,\n      pointerType: event.pointerType as PointerType,\n      buttons: event.buttons,\n      time: event.timeStamp,\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}